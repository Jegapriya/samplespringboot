node {
   def mvnHome  
   def server=Artifactory.server'Artifactory'
   try{
       stage('Preparation') {
          git 'https://github.com/Jegapriya/samplespringboot.git'
                  
          mvnHome = tool 'Maven'
       }
	
	stage('SonarQube analysis') {
	
		withSonarQubeEnv('Sonarqube') {
				sh 'mvn clean package sonar:sonar'
			}
			
    }
    
        stage('Build') {
           sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
       }
    
    stage("Quality Gate") {
			timeout(time: 1, unit: 'HOURS') { 
				def qg = waitForQualityGate() 
				if (qg.status != 'OK') {
					currentBuild.status='FAILURE'
					error "Pipeline aborted due to quality gate failure: ${qg.status}"
					mail bcc: '', body: 'Build Failed', cc: '', from: '', replyTo: '', subject: 'Build Failed', to: 'jegapriyamunieswaran@gmail.com'
					currentBuild.status='FAILURE'
				}
			}
		}
		
    stage('Artifactory upload') {
	      def uploadSpec = """{ "files": [ {
		   "pattern": "/var/lib/jenkins/workspace/NewForDiscussion/target/*.war", "target": "DemoSnapshot" 
	   } ] }""" 
	   server.upload(uploadSpec)    
   }
   
   stage('downloading artifact'){ 
	def downloadSpec="""{ "files":[ { 
		"pattern":"target/*.war", "target":"/var/lib/jenkins/workspace/NewForDiscussion/" 
	   } ] }"""  
	   server.download(downloadSpec)
   }


   }
   catch(err)
   {
       emailext body: "${err}", subject: 'job failed', to: 'jegapriyamunieswaran@gmail.com'
   }
}



