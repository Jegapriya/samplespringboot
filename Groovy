node {
   def mvnHome  
   def server=Artifactory.server'Artifactory'
   try{
       stage('Preparation') {
          git 'https://github.com/Jegapriya/samplespringboot.git'
           
          mvnHome = tool 'Maven'
       }
  
	stage('SonarQube analysis') {
		withSonarQubeEnv('Sonarqube') {
				sh '''mvn clean package sonar:sonar \
  					-Dsonar.host.url=http://13.90.59.213 \
  					-Dsonar.login=31954f225bd61830fc95c60fb6ecdb37c97e73c6'''
			}
    }
    
    stage("Quality Gate") {
			timeout(time: 1, unit: 'HOURS') { 
				def qg = waitForQualityGate() 
				if (qg.status != 'OK') {
					currentBuild.status='FAILURE'
					error "Pipeline aborted due to quality gate failure: ${qg.status}"
					mail bcc: '', body: 'Build Failed', cc: '', from: '', replyTo: '', subject: 'Build Failed', to: 'jegapriyamunieswaran@gmail.com'
					currentBuild.status='FAILURE'
				}
			}
		}
	
        stage('Build') {
           sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean packag"
       }   
		
    stage('Artifactory upload') {
	      def uploadSpec = """{ "files": [ {
		   "pattern": "/var/lib/jenkins/workspace/NewForDiscussion/target/*.war", "target": "SnapshotNew" 
	   } ] }""" 
	   server.upload(uploadSpec)    
   }
   
   stage('downloading artifact'){ 
	def downloadSpec="""{ "files":[ { 
		"pattern":"target/*.war", "target":"/var/lib/jenkins/workspace/NewForDiscussion/" 
	   } ] }"""  
	   server.download(downloadSpec)
   }


   }
   catch(err)
   {
    
    	stage("New Jira"){
    	 withEnv(['JIRA_SITE=Jira']) {
      def testIssue = [fields: [ project: [id: 10001],
                                 summary: 'New JIRA Created from Jenkins.',
                                 description: 'New JIRA Created from Jenkins.',
                                 issuetype: [name: 'Bug']]]

      response = jiraNewIssue issue: testIssue

      jiraAssignIssue site: 'https://jegapriya.atlassian.net/', idOrKey: 'NW-14', userName: 'Vikas'
      echo response.successful.toString()
      echo response.data.toString()
    }
   	 }
	 
	 stage('comment'){
        withEnv(['JIRA_SITE=Jira']) {
			jiraComment body: 'Build sucess', issueKey: 'NW-14'
			jiraAssignIssue idOrKey: 'NW-14', userName: 'admin'
		}
    }
    
    stage('JIRA-transition') {
      withEnv(['JIRA_SITE=Jira']) {
        def transitionInput =
        [
          transition: [
            id: '41'			  
          ]
        ]
        jiraTransitionIssue idOrKey: 'NW-14', input: transitionInput
      }
    }
            emailext body: "${err}", subject: 'job failed', to: 'jegapriyamunieswaran@gmail.com'
	    currentBuild.result='Failure'
   }
   
}



